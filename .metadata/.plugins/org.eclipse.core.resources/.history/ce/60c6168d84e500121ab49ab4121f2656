package psCategoryDuplications;


import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import java.io.File;

public class psCategoryDuplication 
{

	public static void main(String[] args)
	{
		try
		{
			File psPackage = new File("D:\\Tools\\Misc\\JARM Count Calculations\\JARM_Export.xml");
			DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
			Document doc = dBuilder.parse(psPackage);
		 
			//optional, but recommended
			//read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
			doc.getDocumentElement().normalize();
		 
			System.out.println("Root element: " + doc.getDocumentElement().getNodeName());
		 
			NodeList nList = doc.getElementsByTagName("*");
		 
			System.out.println("----------------------------");
		 
			for (int temp = 0; temp < nList.getLength(); temp++)
			{
		 
				Node nNode = nList.item(temp);
		 
				System.out.println("\nCurrent Element: " + nNode.getNodeName());
		 
				if (nNode.getNodeType() == Node.ELEMENT_NODE) 
				{
		 
					Element eElement = (Element) nNode;
		 
					System.out.println("Element Name: " + eElement.getAttribute("*"));
					
				}
			}
		 
		}
		catch (Exception ex)
		{
			ex.printStackTrace();
		}
	}
			
}


